-- Create podcasts table to store episode metadata
CREATE TABLE episodes (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  published_at DATETIME,
  duration INTEGER, -- Duration in seconds
  audio_key TEXT NOT NULL,  -- R2 key for the audio file
  thumbnail_key TEXT NOT NULL, -- R2 key for the thumbnail
  transcript TEXT,           -- Generated by Workers AI
  status TEXT CHECK(status IN ('draft', 'published')) NOT NULL DEFAULT 'draft',
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create plays table to track episode statistics
CREATE TABLE plays (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  episode_id INTEGER NOT NULL,
  played_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  user_agent TEXT,
  ip_address TEXT,
  FOREIGN KEY (episode_id) REFERENCES episodes(id) ON DELETE CASCADE
);

-- Create indexes for better query performance
CREATE INDEX idx_episodes_published_at ON episodes(published_at);
CREATE INDEX idx_episodes_status ON episodes(status);
CREATE INDEX idx_plays_episode_id ON plays(episode_id);
CREATE INDEX idx_plays_played_at ON plays(played_at);

-- Create trigger to update episodes.updated_at
CREATE TRIGGER episodes_updated_at 
  AFTER UPDATE ON episodes
BEGIN
  UPDATE episodes 
  SET updated_at = CURRENT_TIMESTAMP 
  WHERE id = NEW.id;
END;